<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kcc.trioffice.domain.attached_file.mapper.AttachedFileMapper">

    <insert id="saveAttachedFile" parameterType="map">
      <selectKey keyProperty="s3UploadFile.fileId" resultType="long" order="BEFORE">
        SELECT SEQ_ATTACHED_FILE.NEXTVAL FROM DUAL
      </selectKey>
      INSERT INTO attached_file (
        file_id
        , chat_id
        , file_url
        , file_type
        , file_name
        , file_volume
        , filename_extension
        , writer
        , write_dt
        , modifier
        , modified_dt
        , is_deleted
      )
      VALUES (
        #{s3UploadFile.fileId}
        , #{chatId}
        , #{s3UploadFile.fileUrl}
        , #{s3UploadFile.fileType}
        , #{s3UploadFile.fileName}
        , #{s3UploadFile.fileSize}
        , #{s3UploadFile.fileExtension}
        , #{employeeId}
        , SYSDATE
        , #{employeeId}
        , SYSDATE
        , 0
      )
    </insert>

    <select id="getAttachedFileByChatId" resultType="com.kcc.trioffice.global.image.dto.response.S3UploadFile">
        SELECT
          file_name AS fileName
          , file_url AS fileUrl
          , filename_extension AS fileExtension
          , file_volume AS fileSize
          , file_type AS fileType
          , file_id AS fileId
          FROM attached_file
          WHERE chat_id = #{chatId}
            AND is_deleted = 0
    </select>

    <select id="getAttachedFile" resultType="com.kcc.trioffice.domain.attached_file.dto.response.AttachedFileInfo">
      SELECT * FROM (
        SELECT sub.*, ROWNUM rnum FROM (
          SELECT
            af.chat_id AS chatId
            , af.file_name AS fileName
            , TO_CHAR(af.write_dt, 'YYYY-MM-DD HH24:MI:SS') AS writeDt
            , e.name AS sender
            , t.tags AS tags
            FROM
              attached_file af
            JOIN chat c
              ON af.chat_id = c.chat_id
            JOIN employee e
              ON af.writer = e.employee_id
            LEFT JOIN (
              SELECT
                file_id,
                LISTAGG(name, ',') WITHIN GROUP (ORDER BY name) AS tags
                FROM tag
                GROUP BY file_id
              ) t ON af.file_id = t.file_id
            WHERE c.chatroom_id = #{chatRoomId}
        <if test="tags != null and tags.size() != 0">
              AND EXISTS (
                SELECT 1 FROM tag t2
                  WHERE t2.file_id = af.file_id
                    AND t2.name IN
            <foreach item="tag" collection="tags" open="(" separator="," close=")">
                #{tag}
            </foreach>
                )
        </if>
      <![CDATA[
            ORDER BY
              af.write_dt DESC
            ) sub
        WHERE ROWNUM <= #{limit} + #{offset}
    ) WHERE rnum > #{offset}
    ]]>
    </select>

</mapper>