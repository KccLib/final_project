<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kcc.trioffice.domain.employee.mapper.EmployeeMapper">

    <select id="getEmployeeByCompanyIdExceptOneSelf" parameterType="map"
            resultType="com.kcc.trioffice.domain.employee.dto.response.SearchEmployee">
      SELECT
        e.employee_id as id
        , e.name
        , d.name as deptName
        , d.dept_id
        , e.position
        FROM employee e
        LEFT JOIN department d
          ON e.dept_id = d.dept_id AND d.is_deleted = 0
        WHERE e.company_id = #{companyId}
          AND  e.employee_id != #{employeeId}
          AND e.is_deleted = 0
        ORDER BY e.name
    </select>

    <select id="getAllEmployeesInfo"
            resultType="com.kcc.trioffice.domain.employee.dto.response.SearchEmployee">
        SELECT
          e.employee_id as id
          , e.name
          , d.name as deptName
          , e.position
          FROM employee e
            LEFT JOIN department d
              ON e.dept_id = d.dept_id AND d.is_deleted = 0
            WHERE
              e.is_deleted = 0
            ORDER BY
              e.name
    </select>

    <select id="getEmployeeInfo" parameterType="Long"
            resultType="com.kcc.trioffice.domain.employee.dto.response.EmployeeInfo">
      SELECT
          employee_id
        , dept_id
        , company_id
        , email
        , password
        , phone_num
        , external_email
        , name
        , birth
        , profile_url
        , fax
        , location
        , is_receive_notification
        , position
        , status
        , status_message
        , fcm_token
        , writer
        , write_dt
        , modifier
        , modified_dt
        , is_deleted
        FROM employee
        WHERE employee_id = #{employee_id}
          AND is_deleted = 0
    </select>

    <select id="getEmployeeInfoFindById" parameterType="String"
        resultType="com.kcc.trioffice.domain.employee.dto.response.EmployeeInfo">
           SELECT
             employee_id as employeeId
             , dept_id as deptId
             , company_id as companyId
             , email
             , password
             , phone_num as phoneNum
             , external_email as externalEmail
             , name
             , birth
             , profile_url as profileUrl
             , fax
             , location
             , is_receive_notification as isReceiveNotification
             , position
             , status
             , status_message as statusMessage
             , writer
             , write_dt as writeDt
             , modifier
             , modified_dt as modifiedDt
             , is_deleted as isDeleted
            FROM employee e
            WHERE email = #{id}
                AND is_deleted = 0
    </select>


    <select id="getEmployeeInfoList" parameterType="java.util.List"
            resultType="com.kcc.trioffice.domain.employee.dto.response.EmployeeInfo">
      SELECT
        employee_id
        , dept_id
        , company_id
        , email
        , password
        , phone_num
        , external_email
        , name
        , birth
        , profile_url
        , fax
        , location
        , is_receive_notification
        , position
        , status
        , status_message
        , fcm_token
        , writer
        , write_dt
        , modifier
        , modified_dt
        , is_deleted as isDeleted
        FROM employee
        WHERE employee_id IN
          <foreach item="id" collection="list" open="(" separator="," close=")">
              #{id}
          </foreach>

    </select>

    <select id="getEmployeeInfoFindByEmail" parameterType="String"
            resultType="com.kcc.trioffice.domain.employee.dto.response.EmployeeInfo">
        SELECT
          employee_id as employeeId
          , dept_id as deptId
          , company_id as companyId
          , email
          , password
          , phone_num as phoneNum
          , external_email as externalEmail
          , name
          , birth
          , profile_url as profileUrl
          , fax
          , location
          , is_receive_notification as isReceiveNotification
          , position
          , status
          , status_message as statusMessage
          , writer
          , write_dt as writeDt
          , modifier
          , modified_dt as modifiedDt
          , is_deleted as isDeleted
          FROM employee
          WHERE email = #{email}
          AND is_deleted = 0
    </select>

    <select id="findByEmail" parameterType="String" resultType="String">
      SELECT email
        FROM employee
        WHERE email = #{email}
          AND is_deleted = 0
    </select>

    <select id="getExternalEmail" parameterType="String" resultType="String" >
      SELECT external_email
        FROM employee
        WHERE email = #{email}
          AND is_deleted = 0
    </select>

    <update id="temporaryPassword" parameterType="map" >
      UPDATE employee
        SET password = #{incodingPassword}
        WHERE email = #{email}
          AND is_deleted = 0
    </update>

    <select id="getAdminInfo" resultType="com.kcc.trioffice.domain.employee.dto.response.AdminInfo">
    SELECT name
           , phone_num
      FROM employee
      WHERE employee_id =
        (
          SELECT employee_id
            FROM role
            WHERE name = 'ROLE_ADMIN'
        )
    </select>

  <select id="getEmployeeEmailforSend" parameterType="List" resultType="String">
    SELECT email
    FROM employee
    WHERE employee_id IN
    <foreach collection="Ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
    AND is_deleted = 0
  </select>



    <update id="saveFcmToken" parameterType="map">
    UPDATE employee
      SET fcm_token = #{fcmToken}
      WHERE employee_id = #{employeeId}
    </update>

    <update id="changeEmployeeStatus">
      UPDATE employee
        SET status = #{status}
            , modifier = #{employeeId}
            , modified_dt = sysdate
        WHERE employee_id = #{employeeId}
    </update>



    <!-- 사원 등록 쿼리 -->
    <insert id="saveEmployeeFindById" parameterType="com.kcc.trioffice.domain.employee.dto.response.EmployeeInfo">
        INSERT INTO employee (
        employee_id,
        dept_id,
        company_id,
        email,
        password,
        phone_num,
        external_email,
        name,
        birth,
        profile_url,
        fax,
        location,
        is_receive_notification,
        position,
        status,
        status_message,
        writer,
        write_dt,
        modifier,
        modified_dt,
        is_deleted
        ) VALUES (
        seq_employee.nextval,
        #{deptId},
        #{companyId},
        #{email},
        #{password},
        #{phoneNum},
        #{externalEmail},
        #{name},
        #{birth},
        #{profileUrl},
        #{fax},
        #{location},
        #{isReceiveNotification},
        #{position},
        #{status},
        #{statusMessage, jdbcType=VARCHAR},
        #{writer},
        sysdate,
        #{modifier},
        sysdate,
        0
        )
    </insert>

    <insert id="saveEmployee" parameterType="com.kcc.trioffice.domain.employee.dto.response.EmployeeInfo">
        INSERT INTO employee (
        employee_id,
        dept_id,
        company_id,
        email,
        password,
        external_email,
        name,
        profile_url,
        position,
        status,
        writer,
        write_dt,
        modifier,
        modified_dt,
        is_deleted
        ) VALUES (
        seq_employee.nextval,
        #{employeeInfo.deptId},
        #{employeeInfo.companyId},
        #{employeeInfo.email},
        #{employeeInfo.password},
        #{employeeInfo.externalEmail},
        #{employeeInfo.name},
        #{employeeInfo.profileUrl},
        #{employeeInfo.position},
        #{employeeInfo.status},
        #{writer},
        sysdate,
        #{writer},
        sysdate,
        0
        )
    </insert>


    <!-- 사원 수정 쿼리 -->
    <update id="updateEmployee" parameterType="com.kcc.trioffice.domain.employee.dto.response.EmployeeInfo">
        UPDATE employee
        SET dept_id = #{deptId},
        email = #{email},
        phone_num = #{phoneNum},
        external_email = #{externalEmail},
        name = #{name},
        birth = #{birth},
        profile_url = #{profileUrl},
        fax = #{fax},
        location = #{location},
        is_receive_notification = #{isReceiveNotification},
        position = #{position},
        status = #{status},
        status_message = #{statusMessage},
        modifier = #{modifier},
        modified_dt = sysdate
        WHERE employee_id = #{employeeId}
    </update>

    <!-- 사원 삭제 쿼리 -->
    <update id="deleteEmployee" parameterType="Long">
        UPDATE employee
        SET is_deleted = 1
        WHERE employee_id = #{employeeId}
    </update>

    <select id="getAllPositions" resultType="String">
        SELECT DISTINCT position
        FROM employee
        WHERE is_deleted = 0
        ORDER BY position
    </select>

    <update id="updateEmployeeStatus" parameterType="map">
        UPDATE employee
        SET status = #{status}
        WHERE employee_id = #{employeeId}
        AND is_deleted = 0
    </update>

    <update id="updateEmployeeProfile" parameterType="map" >
        UPDATE employee
        SET profile_url = #{profileUrl}
        WHERE is_deleted = 0
        AND employee_id = #{employeeId}
    </update>

    <update id="updateEmployeeStatusMessage"  parameterType="map" >
        UPDATE employee
        SET status_message = #{message}
        WHERE is_deleted = 0
          AND employee_id = #{employeeId}
    </update>


</mapper>
