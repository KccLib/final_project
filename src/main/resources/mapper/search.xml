<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kcc.trioffice.domain.common.mapper.SearchMapper">


    <select id="getAllEmployeesInfo" parameterType="Long"
            resultType="com.kcc.trioffice.domain.employee.dto.response.SearchEmployee">

        SELECT *
        FROM (
            SELECT
              e.employee_id as id
              , e.name
              , d.name as deptName
              , e.position
              , e.profile_url as profileURL
            FROM employee e
                LEFT JOIN department d
                    ON e.dept_id = d.dept_id AND d.is_deleted = 0
            WHERE
                e.is_deleted = 0 AND
                e.employee_id != #{employee_id}
            ORDER BY e.name
            )
        WHERE ROWNUM <![CDATA[<=]]> 5

    </select>


    <select id="getMyChatRooms" parameterType="Long"
            resultType="Long">
        SELECT *
        FROM (
            SELECT chat_room_id
            FROM (
                SELECT chat_room_id
               , COUNT(employee_id) AS countMember
                FROM participation_employee
                WHERE is_deleted = 0
                AND chat_room_id IN (
                                    SELECT chat_room_id
                                    FROM participation_employee
                                    WHERE employee_id = #{employeeId} AND is_deleted = 0
                                    )
                GROUP BY chat_room_id
                HAVING COUNT(employee_id) > 2
                )
                ORDER BY chat_room_id DESC
            )
    </select>

    <select id="participationEmployeeFindByChatRoomId" parameterType="long"
            resultType="long">
        SELECT pe.employee_id
        FROM participation_employee pe
        JOIN employee e
            ON pe.employee_id = e.employee_id
            AND e.is_deleted = 0
        WHERE pe.chat_room_id = #{chatRoomId}
          AND pe.is_deleted = 0
          AND pe.chat_room_id = #{chatRoomId}

    </select>


    <select id="getChangeAllEmployeesInfo" parameterType="map"
            resultType="com.kcc.trioffice.domain.employee.dto.response.SearchEmployee">
        SELECT e.employee_id as id
             , e.name
             , d.name as deptName
             , e.position
             , e.profile_url as profileURL
        FROM employee e
                 LEFT JOIN department d
                           ON e.dept_id = d.dept_id AND d.is_deleted = 0
        WHERE
            e.is_deleted = 0 AND
            e.employee_id != #{employeeId} AND
            e.name Like '%'||#{keyword}||'%' AND
            ROWNUM <![CDATA[<=]]> 5
        ORDER BY
            e.name
    </select>

    <select id="getAllEmployeesInfoByKeyword" parameterType="map"
            resultType="com.kcc.trioffice.domain.employee.dto.response.SearchEmployee">
        SELECT e.employee_id as id
             , e.name
             , d.name as deptName
             , e.position
             , e.profile_url as profileURL
        FROM employee e
                 LEFT JOIN department d
                           ON e.dept_id = d.dept_id AND d.is_deleted = 0
        WHERE
            e.is_deleted = 0 AND
            e.company_id = #{companyId} AND
            e.name Like '%'||#{keyword}||'%' AND
            ROWNUM <![CDATA[<=]]> 5
        ORDER BY
            e.name
    </select>


    <select id="getChangeMyChatRooms" parameterType="Long"
            resultType="Long">
        SELECT *
        FROM (
                 SELECT chat_room_id
                 FROM (
                          SELECT chat_room_id
                               , COUNT(employee_id) AS countMember
                          FROM participation_employee
                          WHERE is_deleted = 0
                            AND chat_room_id IN (
                              SELECT chat_room_id
                              FROM participation_employee
                              WHERE employee_id = #{employeeId} AND is_deleted = 0
                          )
                          GROUP BY chat_room_id
                          HAVING COUNT(employee_id) > 2
                      )
                 ORDER BY chat_room_id DESC
             )
    </select>

    <select id="getRoomName" parameterType="Long" resultType="String">
        SELECT name
        from chat_room
        where chat_room_id = #{chatRoomId}
        AND is_deleted = 0
    </select>

</mapper>
